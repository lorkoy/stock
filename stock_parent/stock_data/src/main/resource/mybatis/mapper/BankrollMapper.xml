<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.stock.db.mybatis.BankrollMapper" >
  <resultMap id="BaseResultMap" type="com.stock.db.entity.Bankroll" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="stock_code" property="stockCode" jdbcType="VARCHAR" />
    <result column="year" property="year" jdbcType="VARCHAR" />
    <result column="month" property="month" jdbcType="VARCHAR" />
    <result column="date" property="date" jdbcType="VARCHAR" />
    <result column="mainForce" property="mainforce" jdbcType="VARCHAR" />
    <result column="large" property="large" jdbcType="VARCHAR" />
    <result column="big" property="big" jdbcType="VARCHAR" />
    <result column="medium" property="medium" jdbcType="VARCHAR" />
    <result column="small" property="small" jdbcType="VARCHAR" />
    <result column="create_date" property="createDate" jdbcType="TIMESTAMP" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    id, stock_code, year, month, date, mainForce, large, big, medium, small, create_date
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.stock.db.entity.BankrollExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from bankroll
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from bankroll
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from bankroll
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.stock.db.entity.BankrollExample" >
    delete from bankroll
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.stock.db.entity.Bankroll" >
    insert into bankroll (id, stock_code, year, 
      month, date, mainForce, 
      large, big, medium, 
      small, create_date)
    values (#{id,jdbcType=INTEGER}, #{stockCode,jdbcType=VARCHAR}, #{year,jdbcType=VARCHAR}, 
      #{month,jdbcType=VARCHAR}, #{date,jdbcType=VARCHAR}, #{mainforce,jdbcType=VARCHAR}, 
      #{large,jdbcType=VARCHAR}, #{big,jdbcType=VARCHAR}, #{medium,jdbcType=VARCHAR}, 
      #{small,jdbcType=VARCHAR}, #{createDate,jdbcType=TIMESTAMP})
  </insert>
  <insert id="insertSelective" parameterType="com.stock.db.entity.Bankroll" >
    insert into bankroll
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="stockCode != null" >
        stock_code,
      </if>
      <if test="year != null" >
        year,
      </if>
      <if test="month != null" >
        month,
      </if>
      <if test="date != null" >
        date,
      </if>
      <if test="mainforce != null" >
        mainForce,
      </if>
      <if test="large != null" >
        large,
      </if>
      <if test="big != null" >
        big,
      </if>
      <if test="medium != null" >
        medium,
      </if>
      <if test="small != null" >
        small,
      </if>
      <if test="createDate != null" >
        create_date,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="stockCode != null" >
        #{stockCode,jdbcType=VARCHAR},
      </if>
      <if test="year != null" >
        #{year,jdbcType=VARCHAR},
      </if>
      <if test="month != null" >
        #{month,jdbcType=VARCHAR},
      </if>
      <if test="date != null" >
        #{date,jdbcType=VARCHAR},
      </if>
      <if test="mainforce != null" >
        #{mainforce,jdbcType=VARCHAR},
      </if>
      <if test="large != null" >
        #{large,jdbcType=VARCHAR},
      </if>
      <if test="big != null" >
        #{big,jdbcType=VARCHAR},
      </if>
      <if test="medium != null" >
        #{medium,jdbcType=VARCHAR},
      </if>
      <if test="small != null" >
        #{small,jdbcType=VARCHAR},
      </if>
      <if test="createDate != null" >
        #{createDate,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.stock.db.entity.BankrollExample" resultType="java.lang.Integer" >
    select count(*) from bankroll
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update bankroll
    <set >
      <if test="record.id != null" >
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.stockCode != null" >
        stock_code = #{record.stockCode,jdbcType=VARCHAR},
      </if>
      <if test="record.year != null" >
        year = #{record.year,jdbcType=VARCHAR},
      </if>
      <if test="record.month != null" >
        month = #{record.month,jdbcType=VARCHAR},
      </if>
      <if test="record.date != null" >
        date = #{record.date,jdbcType=VARCHAR},
      </if>
      <if test="record.mainforce != null" >
        mainForce = #{record.mainforce,jdbcType=VARCHAR},
      </if>
      <if test="record.large != null" >
        large = #{record.large,jdbcType=VARCHAR},
      </if>
      <if test="record.big != null" >
        big = #{record.big,jdbcType=VARCHAR},
      </if>
      <if test="record.medium != null" >
        medium = #{record.medium,jdbcType=VARCHAR},
      </if>
      <if test="record.small != null" >
        small = #{record.small,jdbcType=VARCHAR},
      </if>
      <if test="record.createDate != null" >
        create_date = #{record.createDate,jdbcType=TIMESTAMP},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update bankroll
    set id = #{record.id,jdbcType=INTEGER},
      stock_code = #{record.stockCode,jdbcType=VARCHAR},
      year = #{record.year,jdbcType=VARCHAR},
      month = #{record.month,jdbcType=VARCHAR},
      date = #{record.date,jdbcType=VARCHAR},
      mainForce = #{record.mainforce,jdbcType=VARCHAR},
      large = #{record.large,jdbcType=VARCHAR},
      big = #{record.big,jdbcType=VARCHAR},
      medium = #{record.medium,jdbcType=VARCHAR},
      small = #{record.small,jdbcType=VARCHAR},
      create_date = #{record.createDate,jdbcType=TIMESTAMP}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.stock.db.entity.Bankroll" >
    update bankroll
    <set >
      <if test="stockCode != null" >
        stock_code = #{stockCode,jdbcType=VARCHAR},
      </if>
      <if test="year != null" >
        year = #{year,jdbcType=VARCHAR},
      </if>
      <if test="month != null" >
        month = #{month,jdbcType=VARCHAR},
      </if>
      <if test="date != null" >
        date = #{date,jdbcType=VARCHAR},
      </if>
      <if test="mainforce != null" >
        mainForce = #{mainforce,jdbcType=VARCHAR},
      </if>
      <if test="large != null" >
        large = #{large,jdbcType=VARCHAR},
      </if>
      <if test="big != null" >
        big = #{big,jdbcType=VARCHAR},
      </if>
      <if test="medium != null" >
        medium = #{medium,jdbcType=VARCHAR},
      </if>
      <if test="small != null" >
        small = #{small,jdbcType=VARCHAR},
      </if>
      <if test="createDate != null" >
        create_date = #{createDate,jdbcType=TIMESTAMP},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.stock.db.entity.Bankroll" >
    update bankroll
    set stock_code = #{stockCode,jdbcType=VARCHAR},
      year = #{year,jdbcType=VARCHAR},
      month = #{month,jdbcType=VARCHAR},
      date = #{date,jdbcType=VARCHAR},
      mainForce = #{mainforce,jdbcType=VARCHAR},
      large = #{large,jdbcType=VARCHAR},
      big = #{big,jdbcType=VARCHAR},
      medium = #{medium,jdbcType=VARCHAR},
      small = #{small,jdbcType=VARCHAR},
      create_date = #{createDate,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>